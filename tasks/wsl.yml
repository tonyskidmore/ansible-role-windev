---

- name: Debug ansible_facts
  debug:
    var: ansible_facts
    verbosity: "{{ verbosity_level }}"

- name: Get Windows Subsystem for Linux status
  win_command: wsl --status
  args:
    output_encoding_override: utf-16
  register: wsl_status
  ignore_errors: yes
  changed_when: no

- name: Debug WSL install status
  debug:
    var: wsl_status
    verbosity: "{{ verbosity_level }}"


# all-in-one method
# Install WSL with a single command now available in Windows 10 version 2004 and higher
# https://devblogs.microsoft.com/commandline/install-wsl-with-a-single-command-now-available-in-windows-10-version-2004-and-higher/
- name: Use wsl --install
  block:
    - name: Install Windows Subsystem for Linux (wsl2) - wsl --install
      win_command: wsl --install
      args:
        output_encoding_override: utf-16
      register: wsl_install

    - name: Debug WSL install status
      debug:
        var: wsl_install
        verbosity: "{{ verbosity_level }}"

    - name: Reboot after WSL installation
      win_reboot:
      when: wsl_install is changed

  when:
    - use_wsl_install
    - wsl_status is failed
    - ansible_facts['distribution_version'] is version('10.0.19041', '>=')

- name: Install wsl without using wsl --install
  block:
    - name: Enable WSL Windows features
      ansible.windows.win_optional_feature:
        name: "{{ item }}"
        state: present
      register: win_feature
      loop: "{{ win_features }}"

    - name: Debug win_feature
      debug:
        var: win_feature
        verbosity: "{{ verbosity_level }}"

    - name: Reboot if WSL feature installation requires it
      ansible.windows.win_reboot:
      when:
        - win_feature.results | selectattr('reboot_required','defined') |
          selectattr('reboot_required', 'equalto', true) | list | length
  when:
    - not use_wsl_install
    - wsl_status is failed

# re: https://github.com/kaisalmen/wsltooling
- name: WSL download block
  block:

    - name: Test for ubuntu distribution
      debug:
        msg: "Ubuntu distribution not found"
      when:
        - '"Default Distribution: ubuntu" not in wsl_status.stdout'

    - name: Create wsl temporary directory
      ansible.windows.win_tempfile:
        state: directory
        suffix: wsl
      register: wsl_download_dir

    - name: Create ubuntu temporary directory
      ansible.windows.win_tempfile:
        state: directory
        suffix: wsl_ubuntu
      register: wsl_ubuntu_dir

    - name: Download WSL Update
      ansible.windows.win_get_url:
        url: https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi
        dest: "{{ wsl_download_dir.path }}\\wsl_update_x64.msi"

    - name: Download Ubuntu 20.04
      ansible.windows.win_get_url:
        url: https://aka.ms/wslubuntu2004
        dest: "{{ wsl_download_dir.path }}\\ubuntuLTS.zip"

    # - name: Check my user name
    #   ansible.windows.win_whoami:
    #   become: yes
    #   become_method: runas
    #   become_user: "{{ ansible_user }}"
    #   register: whoami

    # - name: Debug whoami
    #   debug:
    #     var: whoami
    #     verbosity: "{{ verbosity_level }}"

    - name: turn UAC off
      win_regedit:
        path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\policies\system
        name: EnableLUA
        data: 0
        type: dword
        state: present
      register: uac_result

    - name: reboot after disabling UAC
      win_reboot:
      when: uac_result is changed

    - name: Run wsl_update_x64.msi installer
      ansible.windows.win_package:
        path: "{{ wsl_download_dir.path }}\\wsl_update_x64.msi"
        state: present
      register: wsl_update_x64

    - name: Debug wsl_update_x64
      debug:
        var: wsl_update_x64
        verbosity: "{{ verbosity_level }}"

    - name: Set Windows Subsystem for Linux version 2 (wsl2)
      win_command: wsl --set-default-version 2
      args:
        output_encoding_override: utf-16
      register: wsl_set_v2

    - name: Debug wsl_set_v2
      debug:
        var: wsl_set_v2
        verbosity: "{{ verbosity_level }}"

    - name: Unzip ubuntu file
      community.windows.win_unzip:
        src: "{{ wsl_download_dir.path }}\\ubuntuLTS.zip"
        dest: "{{ wsl_ubuntu_dir.path }}\\ubuntu"
        creates: "{{ wsl_ubuntu_dir.path }}\\ubuntu"
      register: wsl_unzip

    - name: Debug wsl_unzip
      debug:
        var: wsl_unzip
        verbosity: "{{ verbosity_level }}"

    - name: Run wsl import ubuntu
      win_command: "wsl --import ubuntu {{ ansible_user_dir }}\\wsl {{ wsl_ubuntu_dir.path }}\\ubuntu\\install.tar.gz"
      args:
        output_encoding_override: utf-16
      register: wsl_import
      until: (wsl_import.rc == 0) or (wsl_import.rc == 4294967295)
      # or '"A distribution with the supplied name already exists" in wsl_import.stdout'
      retries: 5
      delay: 60
      changed_when: '"A distribution with the supplied name already exists" not in wsl_import.stdout'
      failed_when:
        - wsl_import.rc != 0
        - '"A distribution with the supplied name already exists" not in wsl_import.stdout'

    - name: Debug wsl_import
      debug:
        var: wsl_import
        verbosity: "{{ verbosity_level }}"

  # always:

    # - name: Remove temp download directory
    #   ansible.windows.win_file:
    #     path: "{{ wsl_download_dir.path }}"
    #     state: absent

  when:
    - '"Default Distribution: ubuntu" not in wsl_status.stdout'
    - not use_wsl_install
    # - wsl_status.rc != 0
