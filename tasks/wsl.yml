---

- name: Debug ansible_facts
  debug:
    var: ansible_facts
    verbosity: "{{ verbosity_level }}"

- name: Install Windows Subsystem for Linux (wsl2)
  win_command: wsl --status
  register: wsl_status
  ignore_errors: yes
  changed_when: no

- name: Debug WSL install status
  debug:
    var: wsl_status
    verbosity: "{{ verbosity_level }}"

- debug:
    msg: "{{ wsl_status.stdout | to_yaml }}"
    verbosity: "{{ verbosity_level }}"

# all-in-one method
# Install WSL with a single command now available in Windows 10 version 2004 and higher
# https://devblogs.microsoft.com/commandline/install-wsl-with-a-single-command-now-available-in-windows-10-version-2004-and-higher/
# - name: Install Windows Subsystem for Linux (wsl2)
#   win_command: wsl --install
#   register: wsl_install
#   when:
#     - wsl_status is failed

# - name: Debug WSL install status
#   debug:
#     var: wsl_install
#     verbosity: "{{ verbosity_level }}"

# - name: Reboot after WSL installation
#   win_reboot:
#   when: wsl_install is changed



- name: Enable WSL Windows features
  ansible.windows.win_optional_feature:
    name: "{{ item }}"
    state: present
  register: win_feature
  loop: "{{ win_features }}"

- name: Debug win_feature
  debug:
    var: win_feature

- name: Reboot if WSL feature installation requires it
  ansible.windows.win_reboot:
  when:
    - win_feature.reboot_required is defined
    - win_feature.reboot_required

# re: https://github.com/kaisalmen/wsltooling
- name: WSL download block
  block:

    - name: Create wsl temporary directory
      ansible.windows.win_tempfile:
        state: directory
        suffix: wsl
      register: wsl_download_dir

    - name: Create ubuntu temporary directory
      ansible.windows.win_tempfile:
        state: directory
        suffix: wsl_ubuntu
      register: wsl_ubuntu_dir

    - name: Download WSL Update
      ansible.windows.win_get_url:
        url: https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi
        dest: "{{ wsl_download_dir.path }}\\wsl_update_x64.msi"

    - name: Download Ubuntu 20.04
      ansible.windows.win_get_url:
        url: https://aka.ms/wslubuntu2004
        dest: "{{ wsl_download_dir.path }}\\ubuntuLTS.zip"

    - name: Check my user name
      ansible.windows.win_whoami:
      become: yes
      become_method: runas

    - name: Run wsl_update_x64.msi installer
      ansible.windows.win_package:
        path: "{{ wsl_download_dir.path }}\\wsl_update_x64.msi"
        state: present
      register: wsl_update_x64
      become: yes
      become_method: runas

    - name: Debug wsl_update_x64
      debug:
        var: wsl_update_x64

    - name: Set Windows Subsystem for Linux version 2 (wsl2)
      win_command: wsl --set-default-version 2
      register: wsl_set_v2
      # when:
      #   - wsl_status is failed

    - name: Debug wsl_set_v2
      debug:
        var: wsl_set_v2

    - name: Unzip ubuntu file
      community.windows.win_unzip:
        src: "{{ wsl_download_dir.path }}\\ubuntuLTS.zip"
        dest: "{{ wsl_ubuntu_dir.path }}\\ubuntu"
        creates: "{{ wsl_ubuntu_dir.path }}\\ubuntu"
      register: wsl_unzip

    - name: Debug wsl_unzip
      debug:
        var: wsl_unzip

    # worked when ran locally
    - name: Run wsl import
      win_command: "wsl --import ubuntu {{ ansible_user_dir }}\\wsl {{ wsl_ubuntu_dir.path }}\\ubuntu\\install.tar.gz"
      register: wsl_import
      # when:
      #   - wsl_status is failed

    - name: Debug wsl_import
      debug:
        var: wsl_import

  always:

    - name: Remove temp download directory
      ansible.windows.win_file:
        path: "{{ wsl_download_dir.path }}"
        state: absent
