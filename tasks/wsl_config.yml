---

# - name: Update Ubuntu WSL
#   ansible.windows.win_powershell:
#     script: |
#       wsl -d ubuntu -u root bash -ic "apt update; apt upgrade -y"
#   register: wsl_update
#   when:
#     - configure_wsl_update

- name: Configure default WSL user
  ansible.windows.win_powershell:
    script: |
      wsl -d ubuntu -u root bash -ic "useradd -m {{ ansible_user }}"
      wsl -d ubuntu -u root bash -ic "passwd -d {{ ansible_user }}"
      wsl -d ubuntu -u root bash -ic "echo '%{{ ansible_user }} ALL=(ALL:ALL) NOPASSWD:ALL' > /etc/sudoers.d/{{ ansible_user }}"
      wsl -d ubuntu -u root bash -ic "echo '[user]' > /etc/wsl.conf"
      wsl -d ubuntu -u root bash -ic "echo 'default={{ ansible_user }}' >> /etc/wsl.conf"
      wsl -d ubuntu -u root bash -ic "echo '[interop]' >> /etc/wsl.conf"
      wsl -d ubuntu -u root bash -ic "echo 'enabled = false' >> /etc/wsl.conf"
      wsl -d ubuntu -u root bash -ic "echo 'appendWindowsPath = false' >> /etc/wsl.conf"
  register: wsl_default_user

- name: Debug wsl_default_user
  debug:
    var: wsl_default_user
    verbosity: "{{ verbosity_level }}"

- name: Create ansible directory in ansible remote path
  ansible.windows.win_file:
    path: "{{ ansible_remote_path }}"
    state: directory

- name: Copy scripts to ansible remote path
  ansible.windows.win_copy:
    src: "files/{{ item.script }}"
    dest: "{{ ansible_remote_path }}\\{{ item.script }}"
  loop: "{{ configure_wsl_scripts }}"

- name: Include WSL config scripts
  include_tasks:
    file: wsl_scripts.yml
  loop: "{{ configure_wsl_scripts }}"
  loop_control:
    loop_var: wsl_script_item
  when:
    - configure_wsl_scripts is defined
    - configure_wsl_scripts | length

- name: Create WSL application shortcut on the desktop
  community.windows.win_shortcut:
    src: C:\Windows\System32\bash.exe
    dest: C:\Users\Public\Desktop\WSL.lnk
    icon: C:\Windows\System32\wsl.exe,0


